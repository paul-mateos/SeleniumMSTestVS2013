// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RTA.Automation.AX
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uICustomerreferencenumEdit = this.UIBPAYFileExceptions1rWindow.UIItemWindow.UICustomerreferencenumEdit;
            WinMenuItem uIFilterbyfieldMenuItem = this.UIItemWindow.UIContextMenu.UIFilterbyfieldMenuItem;
            #endregion

            // Right-Click 'Customer reference number' text box
            Mouse.Click(uICustomerreferencenumEdit, MouseButtons.Right, ModifierKeys.None, new Point(28, 7));

            // Click 'Filter by field' menu item
            Mouse.Click(uIFilterbyfieldMenuItem, new Point(41, 10));
        }
        
        #region Properties
        public UIBPAYFileExceptions1rWindow UIBPAYFileExceptions1rWindow
        {
            get
            {
                if ((this.mUIBPAYFileExceptions1rWindow == null))
                {
                    this.mUIBPAYFileExceptions1rWindow = new UIBPAYFileExceptions1rWindow();
                }
                return this.mUIBPAYFileExceptions1rWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIBPAYFileExceptions1rWindow mUIBPAYFileExceptions1rWindow;
        
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIBPAYFileExceptions1rWindow : WinWindow
    {
        
        public UIBPAYFileExceptions1rWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "‪BPAY File Exceptions‬ (‎‪1‬ - ‎‪rtb‬)‎";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "AxTopLevelFrame";
            this.WindowTitles.Add("‪BPAY File Exceptions‬ (‎‪1‬ - ‎‪rtb‬)‎");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12298";
            this.WindowTitles.Add("‪BPAY File Exceptions‬ (‎‪1‬ - ‎‪rtb‬)‎");
            #endregion
        }
        
        #region Properties
        public WinEdit UICustomerreferencenumEdit
        {
            get
            {
                if ((this.mUICustomerreferencenumEdit == null))
                {
                    this.mUICustomerreferencenumEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICustomerreferencenumEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Customer reference number";
                    this.mUICustomerreferencenumEdit.WindowTitles.Add("‪BPAY File Exceptions‬ (‎‪1‬ - ‎‪rtb‬)‎");
                    #endregion
                }
                return this.mUICustomerreferencenumEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICustomerreferencenumEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIFilterbyfieldMenuItem
        {
            get
            {
                if ((this.mUIFilterbyfieldMenuItem == null))
                {
                    this.mUIFilterbyfieldMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIFilterbyfieldMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Filter by field";
                    #endregion
                }
                return this.mUIFilterbyfieldMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIFilterbyfieldMenuItem;
        #endregion
    }
}
